{
  "version": 3,
  "sources": ["../../src/index.js", "../../src/utils/math.js", "../../src/operator.js", "../../src/utils/css.js", "../../src/point.js", "../../src/vector.js", "../../src/degree.js", "../../src/quaternion.js", "../../src/color.js", "../../src/mat3.js", "../../src/angles.js"],
  "sourcesContent": ["import { Vector } from './vector';\n\nexport { operatorCalc as calc } from './operator';\nexport {\n  Vector, Victor, Victor as IVector, vector, victor, victor as ivector, FORWARD, LEFT, UP, RIGHT\n} from './vector';\nexport {\n  Point, IPoint, point, ipoint\n} from './point';\nexport {\n  Quaternion, IQuaternion, IDENTITY, quaternion, iquaternion, fromOrientation\n} from './quaternion';\nexport {\n  Degree, IDegree, degree, idegree\n} from './degree';\nexport {\n  Color, IColor, color, icolor\n} from './color';\nexport { IMat3 } from './mat3';\nexport { radians, degrees } from './angles';\n\nexport default Vector;\n", "export function isArray (arr) {\n  return Array.isArray(arr) || ArrayBuffer.isView(arr);\n}\n\n// http://schteppe.github.io/cannon.js/docs/files/src_math_Quaternion.js.html\nexport function multQuatVec (quat, vec) {\n  const {\n    x, y, z\n  } = vec;\n  const {\n    x: qx, y: qy, z: qz, w: qw\n  } = quat;\n\n  const ix = qw * x + qy * z - qz * y;\n  const iy = qw * y + qz * x - qx * z;\n  const iz = qw * z + qx * y - qy * x;\n  const iw = -qx * x - qy * y - qz * z;\n  const rx = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  const ry = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  const rz = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return new vec.constructor(rx, ry, rz);\n}\n\nconst angle180 = Math.PI;\nconst angle360 = Math.PI * 2;\n\nexport function normRad (angle) {\n  let mod = angle % angle360;\n  if (mod < -angle180) {\n    mod += angle360;\n  } else if (mod > angle180) {\n    mod -= angle360;\n  }\n  return mod;\n}\n\nexport function acos (fValue) {\n  if (fValue > -1.0) {\n    if (fValue < 1.0) {\n      return Math.acos(fValue);\n    }\n    return 0.0;\n  }\n  return angle180;\n}\n\n// https://www.khronos.org/registry/OpenGL/specs/es/2.0/GLSL_ES_Specification_1.00.pdf page 50 & 51\n// https://stackoverflow.com/questions/24593939/matrix-multiplication-with-vector-in-glsl#answer-24594497\nexport function multiplyMat3Mat3 (matLeft, [mat0, mat1, mat2]) {\n  const [column0, column1, column2] = matLeft;\n  return new matLeft.constructor(\n    new column0.constructor(\n      column0.x * mat0.x + column1.x * mat0.y + column2.x * mat0.z,\n      column0.y * mat0.x + column1.y * mat0.y + column2.y * mat0.z,\n      column0.z * mat0.x + column1.z * mat0.y + column2.z * mat0.z\n    ),\n    new column0.constructor(\n      column0.x * mat1.x + column1.x * mat1.y + column2.x * mat1.z,\n      column0.y * mat1.x + column1.y * mat1.y + column2.y * mat1.z,\n      column0.z * mat1.x + column1.z * mat1.y + column2.z * mat1.z\n    ),\n    new column0.constructor(\n      column0.x * mat2.x + column1.x * mat2.y + column2.x * mat2.z,\n      column0.y * mat2.x + column1.y * mat2.y + column2.y * mat2.z,\n      column0.z * mat2.x + column1.z * mat2.y + column2.z * mat2.z\n    )\n  );\n}\n\nexport function multiplyMat3Vec (matLeft, { x, y, z }) {\n  const [column0, column1, column2] = matLeft;\n  return new column0.constructor(\n    column0.x * x + column1.x * y + column2.x * z,\n    column0.y * x + column1.y * y + column2.y * z,\n    column0.z * x + column1.z * y + column2.z * z\n  );\n}\n\nexport function multiplyVecMat3 (vecLeft, [column0, column1, column2]) {\n  return new vecLeft.constructor(\n    vecLeft.dot(column0),\n    vecLeft.dot(column1),\n    vecLeft.dot(column2)\n  );\n}\n\nexport function multiplyVecMat4 (vecLeft, [column0, column1, column2, column3]) {\n  return new vecLeft.constructor(\n    vecLeft.dot(column0),\n    vecLeft.dot(column1),\n    vecLeft.dot(column2),\n    vecLeft.dot(column3)\n  );\n}\n\nexport function isNumber (nr) {\n  if (typeof nr === 'number' || nr?.constructor === Number) {\n    return true;\n  }\n  return false;\n}\n", "import { isNumber } from './utils/math';\n\nconst X = 0;\nconst Y = 1;\nconst Z = 2;\nconst W = 3;\nconst CHECK_SUM = 9999999999999;\n\nconst DEFAULT = undefined;\nconst VECTOR_LENGTH = Symbol('vector length');\nconst GET_SOURCE = Symbol('get source');\nconst CHECKED = Symbol('checked');\n\nlet inProgress = DEFAULT;\nlet inVector;\nlet elCount;\nconst allChecks = [0, 1, 2, 6, 24, 120, 720, 5760, 51840, 518400, 5702400, 68428800, 889574400, 12454041600, 186810624000];\nconst collect = [];\n\nlet resultCacheIndex = -1;\nlet handlingCache = false;\nconst resultCache = [];\n\nfunction handleProgess (progess, alg, resVec) {\n  inProgress = progess;\n  resultCacheIndex = -1;\n  elCount = 1;\n\n  const res = alg(resVec);\n\n  if (!isNumber(res)) {\n    throw new Error(`\n      your assigned progress did not not return a primitive!\n      calc() does not support logical operators (|| && ==) directly\n\n      instead of calc(() => v1 || v2);\n      use        calc(() => +v1 || +v2);\n\n      instead of calc(() => v1);\n      use        calc(v1);\n      `);\n  }\n  return res;\n}\n\nfunction getVectorLength (vec) {\n  const getSource = vec[GET_SOURCE];\n  if (getSource) {\n    return getSource(vec).length;\n  }\n  return vec[VECTOR_LENGTH] || 3;\n}\n\nfunction maxVector (v1, v2) {\n  if (getVectorLength(v1) > getVectorLength(v2)) {\n    return v1;\n  }\n  return v2;\n}\n\nfunction getVectorValue (vec, index) {\n  elCount += 1;\n\n  if (index === CHECK_SUM) {\n    return elCount;\n  }\n\n  if (index >= getVectorLength(vec)) {\n    return 0;\n  }\n\n  const getSource = vec[GET_SOURCE];\n  if (getSource) {\n    return 1.0 * getSource(vec)[index];\n  }\n  if (index === X) {\n    return 1.0 * vec.x;\n  }\n  if (index === Y) {\n    return 1.0 * vec.y;\n  }\n  if (index === Z) {\n    return 1.0 * vec.z;\n  }\n  if (index === W) {\n    return 1.0 * vec.w;\n  }\n  // really?\n  return undefined;\n}\n\nfunction setVectorValue (vec, index, value) {\n  const getSource = vec[GET_SOURCE];\n  if (getSource) {\n    getSource(vec)[index] = value;\n    return;\n  }\n  if (index === X) {\n    vec.x = value;\n    return;\n  }\n  if (index === Y) {\n    vec.y = value;\n    return;\n  }\n  if (index === Z) {\n    vec.z = value;\n  }\n  if (index === W) {\n    vec.w = value;\n  }\n}\n\nexport function operatorCalc (alg, result) {\n  if (typeof alg !== 'function') {\n    throw new Error('no function assigned');\n  }\n  if (inProgress !== DEFAULT) {\n    throw new Error('something wrong, do you use calc() inside calc?');\n  }\n  try {\n    const noRes = typeof result === 'undefined';\n    const funRes = typeof result === 'function';\n    const resVec = !funRes && !noRes ? result : undefined;\n    const x = handleProgess(X, alg, resVec);\n\n    if (noRes && typeof inVector === 'undefined') {\n      return x;\n    }\n\n    const inLen = inVector ? getVectorLength(inVector) : 0;\n    if (inLen === CHECK_SUM) {\n      if (!alg[CHECKED]) {\n        const checkSum = handleProgess(CHECK_SUM, alg);\n\n        const sum = allChecks[elCount];\n        if (Math.abs(checkSum - sum) > Number.EPSILON) {\n          throw new Error(`\n            algebraic multiplication works only in calls with *\n\n            calc(() => v * m);\n            calc(() => m * v);\n            calc(() => m * m);\n            calc(() => m * m * v);\n\n            `);\n        }\n        alg[CHECKED] = true;\n      }\n\n      let last = collect[0];\n      for (let i = 1; i < elCount - 1; i += 1) {\n        const current = collect[i];\n        if (!last.multiply) {\n          throw new Error(`cannot find method multiply() on ${last}`);\n        }\n        last = last.multiply(current);\n      }\n      return last;\n    }\n    let len = funRes ? result.length : inLen;\n    if (!len) {\n      len = inLen;\n    }\n    if (len < inLen) {\n      throw new Error('Your assigned result Vector cant use higher space Operands than it has');\n    }\n    const target = new Array(len);\n    target[0] = x;\n    if (resVec) {\n      setVectorValue(resVec, inProgress, target[0]);\n    }\n    for (let i = 1; i < len; i += 1) {\n      const val = handleProgess(i, alg, resVec);\n      target[i] = val;\n      if (resVec) {\n        setVectorValue(resVec, inProgress, val);\n      }\n    }\n\n    if (noRes) {\n      return new inVector.constructor(...target);\n    }\n    if (funRes) {\n      return result(...target);\n    }\n    return resVec;\n  } finally {\n    inProgress = DEFAULT;\n    inVector = undefined;\n  }\n}\n\nexport function cachedValueOf (VectorClass, getSource) {\n  const Vector = VectorClass.prototype;\n  Vector[GET_SOURCE] = getSource;\n  const name = 'valueOf';\n  const org = Vector[name];\n\n  Vector[name] = function () {\n    if (inProgress === X) {\n      inVector = inVector ? maxVector(inVector, this) : this;\n      collect[elCount - 1] = this;\n    }\n    if (inProgress === DEFAULT) {\n      return org.call(this);\n    }\n    return getVectorValue(this, inProgress);\n  };\n}\n\nfunction bindCache (org) {\n  return function (...args) {\n    if (inProgress === X) {\n      if (handlingCache) {\n        return org.apply(this, args);\n      }\n      try {\n        handlingCache = true;\n\n        resultCacheIndex += 1;\n        const res = org.apply(this, args);\n        resultCache[resultCacheIndex] = res;\n        return res;\n      } finally {\n        handlingCache = false;\n      }\n    }\n    if (inProgress === Y) {\n      resultCacheIndex += 1;\n      return resultCache[resultCacheIndex];\n    }\n    if (inProgress === Z) {\n      resultCacheIndex += 1;\n      return resultCache[resultCacheIndex];\n    }\n    if (inProgress === W) {\n      resultCacheIndex += 1;\n      return resultCache[resultCacheIndex];\n    }\n    return org.apply(this, args);\n  };\n}\n\nexport function cachedMethod (VectorClass, name) {\n  const Vector = VectorClass.prototype;\n  const org = Vector[name];\n  Vector[name] = bindCache(org);\n}\n\nexport function cachedGetter (VectorClass, name) {\n  const Vector = VectorClass.prototype;\n  const desc = Object.getOwnPropertyDescriptor(Vector, name);\n  const org = function () {\n    return desc.get.call(this);\n  };\n\n  Object.defineProperty(Vector, name, {\n    get: bindCache(org),\n  });\n}\n\nexport function defineVectorLength (VectorClass, value) {\n  const Vector = VectorClass.prototype;\n\n  Object.defineProperty(Vector, VECTOR_LENGTH, { value });\n}\n\nexport function defineMatrixLength (MatrixClass) {\n  defineVectorLength(MatrixClass, CHECK_SUM);\n}\n\nexport function cachedFactory (VectorClass) {\n  return bindCache((...args) => new VectorClass(...args));\n}\n\nexport function cachedFunction (fun) {\n  return bindCache(fun);\n}\n", "export function getVarPrefix (name) {\n  let prefix = '';\n  if (name) {\n    prefix = `${name}-`;\n  }\n  return prefix;\n}\n\nexport function convertToCSSVars (name, obj, target = {}) {\n  const prefix = getVarPrefix(name);\n  Object.entries(obj).forEach(([key, value]) => {\n    target[`--${prefix}${key}`] = value;\n  });\n  return target;\n}\n", "import { isArray, normRad, isNumber } from './utils/math';\nimport {\n  cachedFunction, cachedGetter, cachedMethod, cachedValueOf, defineVectorLength, operatorCalc\n} from './operator';\nimport { convertToCSSVars } from './utils/css';\n\nconst X = 0;\nconst Y = 1;\nconst AXES = Symbol('axes');\n\nfunction angleOverGround (y1, x1, y2, x2) {\n  const atanOne = Math.atan2(y1, x1);\n  const atanTwo = Math.atan2(y2, x2);\n\n  return normRad(atanOne - atanTwo);\n}\n\nfunction square (val) {\n  return val * val;\n}\n\nclass APoint {\n  constructor (x, y) {\n    if (typeof x === 'function') {\n      operatorCalc(x, (nx, ny) => {\n        this[AXES] = [nx, ny];\n      });\n    } else if (isArray(x)) {\n      this[AXES] = [...x];\n    } else if (x && isNumber(x.x)) {\n      this[AXES] = [x.x || 0, x.y || 0];\n    } else {\n      this[AXES] = [x || 0, y || 0];\n    }\n  }\n\n  valueOf () {\n    throw new Error('valueOf() not implemented, looks like you try to calculate outside of calc');\n  }\n\n  normalize () {\n    const { length } = this;\n    return new this.constructor(this.x / length, this.y / length);\n  }\n\n  norm () {\n    return this.normalize();\n  }\n\n  // methods ispired by\n  // https://evanw.github.io/lightgl.js/docs/point.html\n\n  dot (v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  getRad () {\n    return normRad(Math.atan2(this.y, this.x));\n  }\n\n  angleTo (v) {\n    return angleOverGround(this.y, this.x, v.y, v.x);\n  }\n\n  rotate (angle) {\n    const sa = Math.sin(angle);\n    const ca = Math.cos(angle);\n\n    const x = this.x * ca - this.y * sa;\n    const y = this.x * sa + this.y * ca;\n\n    return new this.constructor(x, y);\n  }\n\n  distance (v) {\n    return Math.sqrt(square(this.x - v.x) + square(this.y - v.y));\n  }\n\n  dist (v) {\n    return this.distance(v);\n  }\n\n  toArray () {\n    return [this.x, this.y];\n  }\n\n  calc (alg) {\n    throw new Error('calc() not implemented');\n  }\n\n  clone () {\n    throw new Error('clone() not implemented');\n  }\n\n  equals (v) {\n    return this.x === v.x && this.y === v.y;\n  }\n\n  toJSON () {\n    return { x: this.x, y: this.y };\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toCSSVars (name, target) {\n    return convertToCSSVars(name, this.toJSON(), target);\n  }\n\n  get lengthSq () {\n    return this.dot(this);\n  }\n\n  get length () {\n    return Math.sqrt(this.lengthSq);\n  }\n\n  get lensq () {\n    return this.lengthSq;\n  }\n\n  get len () {\n    return this.length;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  set x (_) {\n    throw new Error('set x() not implemented');\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  set y (_) {\n    throw new Error('set y() not implemented');\n  }\n\n  get z () {\n    throw new Error('get z() not implemented');\n  }\n\n  set z (_) {\n    throw new Error('set z() not implemented');\n  }\n\n  [Symbol.iterator] () {\n    return this[AXES].values();\n  }\n}\n\ncachedValueOf(APoint);\ndefineVectorLength(APoint, 2);\ncachedMethod(APoint, 'dot');\ncachedMethod(APoint, 'angleTo');\ncachedMethod(APoint, 'distance');\ncachedMethod(APoint, 'toArray');\ncachedMethod(APoint, 'getRad');\ncachedGetter(APoint, 'length');\ncachedGetter(APoint, 'lengthSq');\n\nexport class Point extends APoint {\n  set x (x) {\n    this[AXES][X] = x;\n  }\n\n  set y (y) {\n    this[AXES][Y] = y;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  calc (alg) {\n    return operatorCalc(alg, this);\n  }\n\n  clone () {\n    return new Point(this.x, this.y);\n  }\n}\n\nexport class IPoint extends APoint {\n  toPoint () {\n    return new Point(this.x, this.y);\n  }\n}\n\nexport function calc (alg) {\n  return operatorCalc(alg);\n}\n\nconst pointFactory = cachedFunction((x, y) => new Point(x, y));\n\nexport const point = (x, y) => pointFactory(x, y);\n\nconst ipointFactory = cachedFunction((x, y) => new IPoint(x, y));\n\nexport const ipoint = (x, y) => ipointFactory(x, y);\n\nexport const ZERO = ipoint(0, 0);\nexport const FORWARD = ipoint(0, -1);\nexport const LEFT = ipoint(-1, 0);\n", "import {\n  acos, isArray, multQuatVec, normRad, multiplyVecMat3, isNumber\n} from './utils/math';\nimport {\n  cachedFunction, cachedGetter, cachedMethod, cachedValueOf, defineVectorLength, operatorCalc\n} from './operator';\nimport { IPoint } from './point';\nimport { convertToCSSVars } from './utils/css';\n\nconst X = 0;\nconst Y = 1;\nconst Z = 2;\nconst AXES = Symbol('axes');\n\nfunction square (val) {\n  return val * val;\n}\n\nclass AVector {\n  constructor (x, y, z) {\n    if (typeof x === 'function') {\n      operatorCalc(x, (nx, ny, nz) => {\n        this[AXES] = [nx, ny, nz];\n      });\n    } else if (isArray(x)) {\n      this[AXES] = [...x];\n    } else if (x && isNumber(x.x)) {\n      this[AXES] = [x.x || 0, x.y || 0, x.z || 0];\n    } else {\n      this[AXES] = [x || 0, y || 0, z || 0];\n    }\n  }\n\n  valueOf () {\n    throw new Error('valueOf() not implemented, looks like you try to calculate outside of calc');\n  }\n\n  normalize () {\n    const { length } = this;\n    return new this.constructor(\n      this.x / length,\n      this.y / length,\n      this.z / length,\n    );\n  }\n\n  norm () {\n    return this.normalize();\n  }\n\n  // methods ispired by\n  // https://evanw.github.io/lightgl.js/docs/vector.html\n\n  dot (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n\n  cross (v) {\n    return new this.constructor(\n      this.y * v.z - this.z * v.y,\n      this.z * v.x - this.x * v.z,\n      this.x * v.y - this.y * v.x,\n    );\n  }\n\n  crossNormalize (v) {\n    const vec = this.cross(v);\n    const { length } = vec;\n    vec[AXES][X] /= length;\n    vec[AXES][Y] /= length;\n    vec[AXES][Z] /= length;\n    return vec;\n  }\n\n  cn (v) {\n    return this.crossNormalize(v);\n  }\n\n  toAngles () {\n    return {\n      theta: Math.atan2(this.z, this.x),\n      phi: Math.asin(this.y / this.length),\n    };\n  }\n\n  angleTo (v) {\n    return normRad(acos(this.dot(v) / (this.length * v.length)));\n  }\n\n  multiply (quat) {\n    if (quat.x === undefined) {\n      return this.multiplyMat3(quat);\n    }\n    if (quat.w === undefined) {\n      return this.multiplyVec3(quat);\n    }\n    return multQuatVec(quat, this);\n  }\n\n  multiplyMat3 (other) {\n    return multiplyVecMat3(this, other);\n  }\n\n  multiplyVec3 ({ x, y, z }) {\n    return new this.constructor(\n      this.x * x,\n      this.y * y,\n      this.z * z\n    );\n  }\n\n  distance (v) {\n    return Math.sqrt(\n      square(this.x - v.x) + square(this.y - v.y) + square(this.z - v.z),\n    );\n  }\n\n  dist (v) {\n    return this.distance(v);\n  }\n\n  toArray () {\n    return [this.x, this.y, this.z];\n  }\n\n  swizzle (target) {\n    const data = target.split('')\n      .map(t => this[t]);\n    if (data.length === 2) {\n      return new IPoint(data[0], data[1]);\n    }\n    return new this.constructor(data[0], data[1], data[2]);\n  }\n\n  calc (arg) {\n    throw new Error('calc() not implemented');\n  }\n\n  clone () {\n    throw new Error('clone() not implemented');\n  }\n\n  equals (v) {\n    return this.x === v.x && this.y === v.y && this.z === v.z;\n  }\n\n  toJSON () {\n    return { x: this.x, y: this.y, z: this.z };\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toCSSVars (name, target) {\n    return convertToCSSVars(name, this.toJSON(), target);\n  }\n\n  get lengthSq () {\n    return this.dot(this);\n  }\n\n  set lengthSq (_) {\n    throw new Error('set lengthSq() not implemented');\n  }\n\n  get length () {\n    return Math.sqrt(this.lengthSq);\n  }\n\n  set length (_) {\n    throw new Error('set length() not implemented');\n  }\n\n  get lensq () {\n    return this.lengthSq;\n  }\n\n  set lensq (_) {\n    throw new Error('set lensq() not implemented');\n  }\n\n  get len () {\n    return this.length;\n  }\n\n  set len (_) {\n    throw new Error('set len() not implemented');\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  set x (_) {\n    throw new Error('set x() not implemented');\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  set y (_) {\n    throw new Error('set y() not implemented');\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  set z (_) {\n    throw new Error('set z() not implemented');\n  }\n\n  get xy () {\n    return new IPoint(this[AXES][X], this[AXES][Y]);\n  }\n\n  set xy (_) {\n    throw new Error('set xz() not implemented');\n  }\n\n  get xz () {\n    return new IPoint(this[AXES][X], this[AXES][Z]);\n  }\n\n  set xz (_) {\n    throw new Error('set xz() not implemented');\n  }\n\n  get yz () {\n    return new IPoint(this[AXES][Y], this[AXES][Z]);\n  }\n\n  set yz (_) {\n    throw new Error('set yz() not implemented');\n  }\n\n  [Symbol.iterator] () {\n    return this[AXES].values();\n  }\n}\n\ncachedValueOf(AVector);\ndefineVectorLength(AVector, 3);\ncachedMethod(AVector, 'dot');\ncachedMethod(AVector, 'cross');\ncachedMethod(AVector, 'crossNormalize');\ncachedMethod(AVector, 'toAngles');\ncachedMethod(AVector, 'angleTo');\ncachedMethod(AVector, 'rotate');\ncachedMethod(AVector, 'distance');\ncachedMethod(AVector, 'toArray');\ncachedGetter(AVector, 'length');\ncachedGetter(AVector, 'lengthSq');\n\nexport class Vector extends AVector {\n  set x (x) {\n    this[AXES][X] = x;\n  }\n\n  set y (y) {\n    this[AXES][Y] = y;\n  }\n\n  set z (z) {\n    this[AXES][Z] = z;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  calc (alg) {\n    return operatorCalc(alg, this);\n  }\n\n  clone () {\n    return new Vector(this.x, this.y, this.z);\n  }\n}\n\nexport class Victor extends AVector {\n  toVector () {\n    return new Vector(this.x, this.y, this.z);\n  }\n\n  clone () {\n    return this;\n  }\n}\n\nexport function calc (alg) {\n  return operatorCalc(alg);\n}\n\nconst vectorFactory = cachedFunction((x, y, z) => new Vector(x, y, z));\n\nexport const vector = (x, y, z) => vectorFactory(x, y, z);\n\nconst victorFactory = cachedFunction((x, y, z) => new Victor(x, y, z));\n\nexport const victor = (x, y, z) => victorFactory(x, y, z);\n\nexport const ZERO = victor(0, 0, 0);\nexport const FORWARD = victor(0, 0, -1);\nexport const BACK = victor(0, 0, 1);\nexport const LEFT = victor(-1, 0, 0);\nexport const RIGHT = victor(1, 0, 0);\nexport const UP = victor(0, 1, 0);\nexport const BOTTOM = victor(0, -1, 0);\nexport const ONE = victor(1, 1, 1);\n", "import { normRad, isNumber } from './utils/math';\nimport { convertToCSSVars } from './utils/css';\n\nconst ANGLE = Symbol('angle rad');\nconst DEG_TO_RAD = Math.PI / 180;\nconst RAD_TO_DEG = 180 / Math.PI;\n\nclass ADegree {\n  constructor (angle) {\n    if (angle instanceof ADegree) {\n      this[ANGLE] = angle[ANGLE];\n    } else {\n      this[ANGLE] = normRad(angle * DEG_TO_RAD);\n    }\n  }\n\n  valueOf () {\n    return this[ANGLE];\n  }\n\n  toJSON () {\n    return { angle: this[ANGLE] };\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toCSSVars (name, target) {\n    return convertToCSSVars(name, this.toJSON(), target);\n  }\n}\n\nexport class Degree extends ADegree {\n  set (angle) {\n    if (angle instanceof ADegree) {\n      this[ANGLE] = angle[ANGLE];\n    } else {\n      this[ANGLE] = normRad((angle || 0) * DEG_TO_RAD);\n    }\n  }\n}\n\nexport class IDegree extends ADegree {\n  toDegree () {\n    return new Degree(this[ANGLE]);\n  }\n}\n\nconst ZERO = new IDegree(0);\n\nexport function degree (angle) {\n  return new Degree(angle);\n}\n\nexport function idegree (angle) {\n  if (angle instanceof IDegree) {\n    return angle;\n  }\n  if (!angle) {\n    return ZERO;\n  }\n  return new IDegree(angle);\n}\n\nexport function isAngle (angle) {\n  return isNumber(angle) || angle instanceof ADegree;\n}\n", "import {\n  FORWARD, LEFT, RIGHT, UP\n} from './vector';\nimport { isArray, multQuatVec, isNumber } from './utils/math';\nimport {\n  cachedFunction, defineMatrixLength, cachedValueOf\n} from './operator';\nimport { degree, isAngle } from './degree';\nimport { convertToCSSVars } from './utils/css';\n\nconst X = 0;\nconst Y = 1;\nconst Z = 2;\nconst W = 3;\nconst AXES = Symbol('axes');\n\nconst FORWARD_CACHE = Symbol('forward cache');\nconst LEFT_CACHE = Symbol('left cache');\nconst UP_CACHE = Symbol('up cache');\nconst INVERSE_CACHE = Symbol('inverse cache');\n\nfunction length ([x, y, z, w]) {\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\nfunction normalize (axes) {\n  const len = length(axes);\n  axes[X] /= len;\n  axes[Y] /= len;\n  axes[Z] /= len;\n  axes[W] /= len;\n}\n\nfunction look (forward, up) {\n  const vector = forward.normalize();\n  const vector2 = up.crossNormalize(vector);\n  const vector3 = vector.crossNormalize(vector2);\n  const m00 = vector2.x;\n  const m01 = vector2.y;\n  const m02 = vector2.z;\n  const m10 = vector3.x;\n  const m11 = vector3.y;\n  const m12 = vector3.z;\n  const m20 = vector.x;\n  const m21 = vector.y;\n  const m22 = vector.z;\n\n  const num8 = (m00 + m11) + m22;\n  const quat = new Array(4);\n  if (num8 > 0) {\n    let num = Math.sqrt(num8 + 1);\n    quat[W] = num * 0.5;\n    num = 0.5 / num;\n    quat[X] = (m12 - m21) * num;\n    quat[Y] = (m20 - m02) * num;\n    quat[Z] = (m01 - m10) * num;\n    return quat;\n  }\n  if ((m00 >= m11) && (m00 >= m22)) {\n    const num7 = Math.sqrt(((1 + m00) - m11) - m22);\n    const num4 = 0.5 / num7;\n    quat[X] = 0.5 * num7;\n    quat[Y] = (m01 + m10) * num4;\n    quat[Z] = (m02 + m20) * num4;\n    quat[W] = (m12 - m21) * num4;\n    return quat;\n  }\n  if (m11 > m22) {\n    const num6 = Math.sqrt(((1 + m11) - m00) - m22);\n    const num3 = 0.5 / num6;\n    quat[X] = (m10 + m01) * num3;\n    quat[Y] = 0.5 * num6;\n    quat[Z] = (m21 + m12) * num3;\n    quat[W] = (m20 - m02) * num3;\n    return quat;\n  }\n  const num5 = Math.sqrt(((1 + m22) - m00) - m11);\n  const num2 = 0.5 / num5;\n  quat[X] = (m20 + m02) * num2;\n  quat[Y] = (m21 + m12) * num2;\n  quat[Z] = 0.5 * num5;\n  quat[W] = (m01 - m10) * num2;\n  return quat;\n}\n\nfunction axisAngle (axis, angle) {\n  const quat = new Array(4);\n  const a = angle * 0.5;\n  const sa = Math.sin(a);\n  const ca = Math.cos(a);\n  quat[X] = sa * axis.x;\n  quat[Y] = sa * axis.y;\n  quat[Z] = sa * axis.z;\n  quat[W] = ca;\n  return quat;\n}\n\nfunction getQuat (x, y, z, w) {\n  if (isNumber(x)) {\n    return [x, y, z, w];\n  }\n  if (isArray(x)) {\n    return [...x];\n  }\n  if (isAngle(y)) {\n    return axisAngle(x, y);\n  }\n  if (x && y) {\n    return look(x, y);\n  }\n  return undefined;\n}\n\nfunction from (x, y, z, w) {\n  if (x && isNumber(x.w)) {\n    return getQuat(x.x, x.y, x.z, x.w);\n  }\n  return getQuat(x, y, z, w) || [0, 0, 0, 1];\n}\n\nclass AQuaternion {\n  constructor (x, y, z, w) {\n    this[AXES] = from(x, y, z, w);\n    normalize(this[AXES]);\n  }\n\n  set (x, y, z, w) {\n    throw new Error('set x() not implemented');\n  }\n\n  multiply (other, y, z, w) {\n    if (isNumber(other.w)) {\n      return this.multiplyQuaternion(other);\n    }\n    const o = getQuat(other, y, z, w);\n    if (o) {\n      return this.multiplyQuaternion(new this.constructor(o));\n    }\n    return this.multiplyVector(other);\n  }\n\n  multiplyVector (vec) {\n    return multQuatVec(this, vec);\n  }\n\n  multiplyQuaternion (quat) {\n    const q1x = this.x;\n    const q1y = this.y;\n    const q1z = this.z;\n    const q1w = this.w;\n    const q2x = quat.x;\n    const q2y = quat.y;\n    const q2z = quat.z;\n    const q2w = quat.w;\n    const x = q1w * q2x + q1x * q2w + q1y * q2z - q1z * q2y;\n    const y = q1w * q2y + q1y * q2w + q1z * q2x - q1x * q2z;\n    const z = q1w * q2z + q1z * q2w + q1x * q2y - q1y * q2x;\n    const w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\n    return new this.constructor(x, y, z, w);\n  }\n\n  mul (other, y, z, w) {\n    return this.multiply(other, y, z, w);\n  }\n\n  get inverse () {\n    const {\n      x, y, z, w,\n    } = this;\n    return this.constructor(x * -1, y * -1, z * -1, w);\n  }\n\n  get inv () {\n    return this.inverse;\n  }\n\n  equals (v) {\n    return this.x === v.x && this.y === v.y && this.z === v.z && this.w === v.w;\n  }\n\n  get left () {\n    return this.multiplyVector(LEFT);\n  }\n\n  get dir () {\n    return this.multiplyVector(FORWARD);\n  }\n\n  get up () {\n    return this.multiplyVector(UP);\n  }\n\n  get [0] () {\n    return this.left;\n  }\n\n  get [1] () {\n    return this.dir;\n  }\n\n  get [2] () {\n    return this.up;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  set x (_) {\n    throw new Error('set x() not implemented');\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  set y (_) {\n    throw new Error('set y() not implemented');\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  set z (_) {\n    throw new Error('set z() not implemented');\n  }\n\n  get w () {\n    return this[AXES][W];\n  }\n\n  set w (_) {\n    throw new Error('set w() not implemented');\n  }\n\n  toJSON () {\n    const {\n      x, y, z, w\n    } = this;\n\n    return {\n      x,\n      y,\n      z,\n      w,\n      a1: 1 - ((y * y) * 2) - ((z * z) * 2),\n      a2: ((x * y) * 2) - ((z * w) * 2),\n      a3: ((x * z) * 2) + ((y * w) * 2),\n      b1: ((x * y) * 2) + ((z * w) * 2),\n      b2: 1 - ((x * x) * 2) - ((z * z) * 2),\n      b3: ((y * z) * 2) - ((x * w) * 2),\n      c1: ((x * z) * 2) - ((y * w) * 2),\n      c2: ((y * z) * 2) + ((x * w) * 2),\n      c3: 1 - ((x * x) * 2) - ((y * y) * 2)\n    };\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toCSSVars (name, target) {\n    return convertToCSSVars(name, this.toJSON(), target);\n  }\n}\n\ncachedValueOf(AQuaternion);\ndefineMatrixLength(AQuaternion);\n\nexport class Quaternion extends AQuaternion {\n  set (x, y, z, w) {\n    if (x instanceof AQuaternion) {\n      this[AXES] = [...x[AXES]];\n    } else {\n      this[AXES] = from(x, y, z, w);\n      normalize(this[AXES]);\n    }\n  }\n\n  set x (x) {\n    this[AXES][X] = x;\n  }\n\n  set y (y) {\n    this[AXES][Y] = y;\n  }\n\n  set z (z) {\n    this[AXES][Z] = z;\n  }\n\n  set w (w) {\n    this[AXES][W] = w;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  get w () {\n    return this[AXES][W];\n  }\n}\n\nfunction fromCache (scope, key, fn) {\n  let res = scope[key];\n  if (!res) {\n    res = fn();\n    scope[key] = res;\n  }\n  return res;\n}\n\nexport class IQuaternion extends AQuaternion {\n  get left () {\n    return fromCache(this, LEFT_CACHE, () => this.multiplyVector(LEFT));\n  }\n\n  get dir () {\n    return fromCache(this, FORWARD_CACHE, () => this.multiplyVector(FORWARD));\n  }\n\n  get up () {\n    return fromCache(this, UP_CACHE, () => this.multiplyVector(UP));\n  }\n\n  get inverse () {\n    return fromCache(this, INVERSE_CACHE, () => {\n      const {\n        x, y, z, w,\n      } = this;\n      return this.constructor(x * -1, y * -1, z * -1, w);\n    });\n  }\n}\n\nconst q = new Quaternion();\n\nconst quaternionFactory = cachedFunction((x, y, z, w) => new Quaternion(x, y, z, w));\n\nexport const quaternion = (x, y, z, w) => quaternionFactory(x, y, z, w);\n\nconst iquaternionFactory = cachedFunction((x, y, z, w) => new IQuaternion(x, y, z, w));\n\nexport const iquaternion = (x, y, z, w) => iquaternionFactory(x, y, z, w);\n\nconst LEFT90 = new IQuaternion(LEFT, degree(90));\n\nexport function fromOrientation ({ alpha, beta, gamma }, orientation) {\n  let rot = iquaternion(UP, degree(alpha))\n    .mul(RIGHT, degree(beta))\n    .mul(FORWARD, degree(gamma))\n    .mul(LEFT90);\n\n  rot = iquaternion(rot.dir, degree(orientation))\n    .mul(rot);\n\n  return rot;\n}\n\nexport const IDENTITY = iquaternion(0, 0, 0, 1);\n", "import { isArray, isNumber } from './utils/math';\nimport {\n  cachedFunction, cachedMethod, cachedValueOf, defineVectorLength, operatorCalc\n} from './operator';\nimport { convertToCSSVars } from './utils/css';\n\nconst X = 0;\nconst Y = 1;\nconst Z = 2;\nconst W = 3;\nconst AXES = Symbol('axes');\n\nclass AColor {\n  constructor (x, y, z, w) {\n    if (typeof x === 'function') {\n      operatorCalc(x, (nx, ny, nz, nw) => {\n        this[AXES] = [nx, ny, nz, nw];\n      });\n    } else if (isArray(x)) {\n      this[AXES] = [...x];\n    } else if (x && isNumber(x.x)) {\n      this[AXES] = [x.x || 0, x.y || 0, x.z || 0, x.w || 0];\n    } else {\n      this[AXES] = [x || 0, y || 0, z || 0, w || 0];\n    }\n  }\n\n  dot (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  }\n\n  valueOf () {\n    throw new Error('valueOf() not implemented, looks like you try to calculate outside of calc');\n  }\n\n  toArray () {\n    return [this.x, this.y, this.z, this.w];\n  }\n\n  calc (alg) {\n    throw new Error('calc() not implemented');\n  }\n\n  clone () {\n    throw new Error('clone() not implemented');\n  }\n\n  equals (v) {\n    return this.x === v.x && this.y === v.y && this.z === v.z && this.w === v.w;\n  }\n\n  toJSON () {\n    return {\n      x: this.x, y: this.y, z: this.z, w: this.w\n    };\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toCSSVars (name, target) {\n    return convertToCSSVars(name, this.toJSON(), target);\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  set x (_) {\n    throw new Error('set x() not implemented');\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  set y (_) {\n    throw new Error('set y() not implemented');\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  set z (_) {\n    throw new Error('set z() not implemented');\n  }\n\n  get w () {\n    return this[AXES][W];\n  }\n\n  set w (_) {\n    throw new Error('set w() not implemented');\n  }\n\n  [Symbol.iterator] () {\n    return this[AXES].values();\n  }\n}\n\ncachedValueOf(AColor);\ndefineVectorLength(AColor, 4);\ncachedMethod(AColor, 'toArray');\n\nexport class Color extends AColor {\n  set x (x) {\n    this[AXES][X] = x;\n  }\n\n  set y (y) {\n    this[AXES][Y] = y;\n  }\n\n  set z (z) {\n    this[AXES][Z] = z;\n  }\n\n  set w (w) {\n    this[AXES][W] = w;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  get w () {\n    return this[AXES][W];\n  }\n\n  calc (alg) {\n    return operatorCalc(alg, this);\n  }\n\n  clone () {\n    return new Color(this.x, this.y);\n  }\n}\n\nexport class IColor extends AColor {\n  toColor () {\n    return new Color(this.x, this.y, this.z, this.w);\n  }\n}\n\nexport function calc (alg) {\n  return operatorCalc(alg);\n}\n\nconst colorFactory = cachedFunction((x, y, z, w) => new Color(x, y, z, w));\n\nexport const color = (x, y, z, w) => colorFactory(x, y, z, w);\n\nconst icolorFactory = cachedFunction((x, y, z, w) => new IColor(x, y, z, w));\n\nexport const icolor = (x, y, z, w) => icolorFactory(x, y, z, w);\n", "import { defineMatrixLength, cachedValueOf } from './operator';\nimport { multiplyMat3Mat3, multiplyMat3Vec } from './utils/math';\n\nconst AXES = Symbol('data');\n\nclass AMat3 {\n  constructor (...columns) {\n    this[AXES] = columns;\n  }\n\n  get [0] () {\n    return this[AXES][0];\n  }\n\n  set [0] (_) {\n    throw new Error('set [0] not implemented');\n  }\n\n  get [1] () {\n    return this[AXES][1];\n  }\n\n  set [1] (_) {\n    throw new Error('set [1] not implemented');\n  }\n\n  get [2] () {\n    return this[AXES][2];\n  }\n\n  set [2] (_) {\n    throw new Error('set [2] not implemented');\n  }\n\n  multiplyMat (other) {\n    return multiplyMat3Mat3(this, other);\n  }\n\n  multiplyVec (other) {\n    return multiplyMat3Vec(this, other);\n  }\n\n  multiply (other) {\n    if (other instanceof AMat3) {\n      return this.multiplyMat(other);\n    }\n    const { x, y, z } = other;\n    if (x === undefined || y === undefined || z === undefined) {\n      throw new Error(`multiply only works with mat3 and vec3, not supported ${other}`);\n    }\n    return this.multiplyVec(other);\n  }\n\n  [Symbol.iterator] () {\n    return this[AXES].values();\n  }\n}\n\ncachedValueOf(AMat3);\ndefineMatrixLength(AMat3);\n\nexport class IMat3 extends AMat3 {\n\n}\n", "const DEG_TO_RAD = Math.PI / 180;\nconst RAD_TO_DEG = 180 / Math.PI;\n\nexport function radians (degree) {\n  return degree * DEG_TO_RAD;\n}\n\nexport function degrees (radian) {\n  return radian * RAD_TO_DEG;\n}\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "Color", "Degree", "FORWARD", "IColor", "IDENTITY", "IDegree", "IMat3", "IPoint", "IQuaternion", "Victor", "LEFT", "Point", "Quaternion", "RIGHT", "UP", "Vector", "operatorCalc", "color", "src_default", "degree", "degrees", "fromOrientation", "icolor", "idegree", "ipoint", "iquaternion", "victor", "point", "quaternion", "radians", "vector", "__toCommonJS", "isArray", "arr", "multQuatVec", "quat", "vec", "x", "y", "z", "qx", "qy", "qz", "qw", "ix", "iy", "iz", "iw", "rx", "ry", "rz", "angle180", "angle360", "normRad", "angle", "mod", "acos", "fValue", "multiplyMat3Mat3", "matLeft", "mat0", "mat1", "mat2", "column0", "column1", "column2", "multiplyMat3Vec", "multiplyVecMat3", "vecLeft", "isNumber", "nr", "X", "Y", "Z", "W", "CHECK_SUM", "DEFAULT", "VECTOR_LENGTH", "GET_SOURCE", "CHECKED", "inProgress", "inVector", "elCount", "allChecks", "collect", "resultCacheIndex", "handlingCache", "resultCache", "handleProgess", "progess", "alg", "resVec", "res", "isNumber", "getVectorLength", "vec", "getSource", "maxVector", "v1", "v2", "getVectorValue", "index", "setVectorValue", "value", "operatorCalc", "result", "noRes", "funRes", "x", "inLen", "checkSum", "sum", "last", "i", "current", "len", "target", "val", "cachedValueOf", "VectorClass", "Vector", "name", "org", "bindCache", "args", "cachedMethod", "cachedGetter", "desc", "defineVectorLength", "defineMatrixLength", "MatrixClass", "cachedFunction", "fun", "bindCache", "getVarPrefix", "name", "prefix", "convertToCSSVars", "obj", "target", "key", "value", "X", "Y", "AXES", "angleOverGround", "y1", "x1", "y2", "x2", "atanOne", "atanTwo", "normRad", "square", "val", "APoint", "x", "y", "operatorCalc", "nx", "ny", "isArray", "isNumber", "length", "v", "angle", "sa", "ca", "alg", "name", "target", "convertToCSSVars", "_", "cachedValueOf", "defineVectorLength", "cachedMethod", "cachedGetter", "Point", "IPoint", "pointFactory", "cachedFunction", "x", "y", "Point", "point", "ipointFactory", "IPoint", "ipoint", "ZERO", "FORWARD", "LEFT", "X", "Y", "Z", "AXES", "square", "val", "AVector", "x", "y", "z", "operatorCalc", "nx", "ny", "nz", "isArray", "isNumber", "length", "v", "vec", "normRad", "acos", "quat", "multQuatVec", "other", "multiplyVecMat3", "target", "data", "t", "IPoint", "arg", "name", "convertToCSSVars", "_", "cachedValueOf", "defineVectorLength", "cachedMethod", "cachedGetter", "Vector", "alg", "Victor", "vectorFactory", "cachedFunction", "x", "y", "z", "Vector", "vector", "victorFactory", "Victor", "victor", "ZERO", "FORWARD", "BACK", "LEFT", "RIGHT", "UP", "BOTTOM", "ONE", "ANGLE", "DEG_TO_RAD", "RAD_TO_DEG", "ADegree", "angle", "normRad", "name", "target", "convertToCSSVars", "Degree", "IDegree", "ZERO", "degree", "idegree", "isAngle", "isNumber", "X", "Y", "Z", "W", "AXES", "FORWARD_CACHE", "LEFT_CACHE", "UP_CACHE", "INVERSE_CACHE", "length", "x", "y", "z", "w", "normalize", "axes", "len", "look", "forward", "up", "vector", "vector2", "vector3", "m00", "m01", "m02", "m10", "m11", "m12", "m20", "m21", "m22", "num8", "quat", "num", "num7", "num4", "num6", "num3", "num5", "num2", "axisAngle", "axis", "angle", "a", "sa", "ca", "getQuat", "isNumber", "isArray", "isAngle", "from", "AQuaternion", "other", "o", "vec", "multQuatVec", "q1x", "q1y", "q1z", "q1w", "q2x", "q2y", "q2z", "q2w", "v", "LEFT", "FORWARD", "UP", "_", "name", "target", "convertToCSSVars", "cachedValueOf", "defineMatrixLength", "Quaternion", "fromCache", "scope", "key", "fn", "res", "IQuaternion", "q", "quaternionFactory", "cachedFunction", "quaternion", "iquaternionFactory", "iquaternion", "LEFT90", "degree", "fromOrientation", "alpha", "beta", "gamma", "orientation", "rot", "RIGHT", "IDENTITY", "X", "Y", "Z", "W", "AXES", "AColor", "x", "y", "z", "w", "operatorCalc", "nx", "ny", "nz", "nw", "isArray", "isNumber", "v", "alg", "name", "target", "convertToCSSVars", "_", "cachedValueOf", "defineVectorLength", "cachedMethod", "Color", "IColor", "colorFactory", "cachedFunction", "x", "y", "z", "w", "Color", "color", "icolorFactory", "IColor", "icolor", "AXES", "AMat3", "columns", "_", "other", "multiplyMat3Mat3", "multiplyMat3Vec", "x", "y", "z", "cachedValueOf", "defineMatrixLength", "IMat3", "DEG_TO_RAD", "RAD_TO_DEG", "radians", "degree", "degrees", "radian", "src_default", "Vector"]
}
